// AI Usage Tracking Schema
// This file contains the database schema for tracking AI usage, costs, and performance metrics

// Core AI Usage Tracking
model AIUsageLog {
  id                   String   @id @default(cuid())
  
  // Request identification
  sessionId            String?                     // Links to AIAnalysisSession
  requestId            String   @unique            // Unique identifier for each API call
  
  // API call details
  model                String                      // gemini-2.5-pro, gemini-2.5-flash, etc.
  operation            String                      // individual, batch, fallback
  startTime            DateTime @default(now())
  endTime              DateTime?
  duration             Int?                        // Duration in milliseconds
  
  // Token usage
  inputTokens          Int      @default(0)
  outputTokens         Int      @default(0)
  totalTokens          Int      @default(0)
  
  // Cost calculation
  inputCost            Float    @default(0.0)      // Cost for input tokens
  outputCost           Float    @default(0.0)      // Cost for output tokens
  totalCost            Float    @default(0.0)      // Total cost for this call
  
  // Request context
  batchSize            Int?                        // Number of posts in batch (null for individual)
  batchMode            Boolean  @default(false)    // Whether batch pricing was used
  
  // Success/failure tracking
  success              Boolean  @default(false)
  errorMessage         String?  @db.Text
  httpStatusCode       Int?
  
  // Performance metrics
  promptTokens         Int      @default(0)        // Tokens used for prompt
  completionTokens     Int      @default(0)        // Tokens used for completion
  cacheHits            Int      @default(0)        // Context cache hits
  
  // Metadata
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  
  // Relations
  analysisSession      AIAnalysisSession? @relation(fields: [sessionId], references: [id])
  
  @@index([sessionId])
  @@index([model])
  @@index([operation])
  @@index([startTime])
  @@index([success])
  @@index([totalCost])
}

// Analysis Session Tracking (for batch operations)
model AIAnalysisSession {
  id                   String   @id @default(cuid())
  
  // Session identification
  sessionType          String                      // batch, individual, fallback
  triggeredBy          String?                     // manual-api, scheduled, etc.
  subreddit            String?                     // For batch operations
  
  // Session metrics
  postsRequested       Int      @default(0)        // Number of posts requested
  postsProcessed       Int      @default(0)        // Number of posts successfully processed
  opportunitiesFound   Int      @default(0)        // Number of opportunities created
  
  // Cost aggregation
  totalCost            Float    @default(0.0)      // Total cost for session
  averageCostPerPost   Float    @default(0.0)      // Average cost per post
  
  // Performance metrics
  totalDuration        Int?                        // Total duration in milliseconds
  averageDuration      Int?                        // Average duration per post
  
  // Success tracking
  successRate          Float    @default(0.0)      // Percentage of successful analyses
  errorCount           Int      @default(0)        // Number of errors
  
  // Timing
  startTime            DateTime @default(now())
  endTime              DateTime?
  
  // Metadata
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  
  // Relations
  usageLogs            AIUsageLog[]
  postAnalyses         AIPostAnalysis[]
  
  @@index([sessionType])
  @@index([subreddit])
  @@index([startTime])
  @@index([totalCost])
  @@index([successRate])
}

// Per-Post Analysis Cost Tracking
model AIPostAnalysis {
  id                   String   @id @default(cuid())
  
  // Post identification
  redditPostId         String                      // Links to RedditPost
  postTitle            String                      // Cached for reporting
  subreddit            String                      // Cached for reporting
  
  // Analysis details
  sessionId            String?                     // Links to AIAnalysisSession
  analysisType         String                      // individual, batch, fallback
  model                String                      // AI model used
  
  // Cost metrics
  totalCost            Float    @default(0.0)      // Total cost for this post
  inputCost            Float    @default(0.0)      // Cost for input tokens
  outputCost           Float    @default(0.0)      // Cost for output tokens
  
  // Token usage
  inputTokens          Int      @default(0)
  outputTokens         Int      @default(0)
  totalTokens          Int      @default(0)
  
  // Analysis outcome
  isOpportunity        Boolean  @default(false)    // Whether an opportunity was found
  opportunityId        String?                     // Links to Opportunity if found
  confidence           Float?                      // AI confidence score
  overallScore         Float?                      // Delta 4 overall score
  
  // Performance metrics
  processingTime       Int?                        // Time to process in milliseconds
  retryCount           Int      @default(0)        // Number of retries
  
  // Success tracking
  success              Boolean  @default(false)
  errorMessage         String?  @db.Text
  
  // Metadata
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  
  // Relations
  session              AIAnalysisSession? @relation(fields: [sessionId], references: [id])
  redditPost           RedditPost @relation(fields: [redditPostId], references: [id])
  opportunity          Opportunity? @relation(fields: [opportunityId], references: [id])
  
  @@index([redditPostId])
  @@index([sessionId])
  @@index([subreddit])
  @@index([analysisType])
  @@index([model])
  @@index([totalCost])
  @@index([isOpportunity])
  @@index([createdAt])
  @@unique([redditPostId, sessionId])
}

// Daily Usage Aggregation
model AIDailyUsage {
  id                   String   @id @default(cuid())
  
  // Date tracking
  date                 DateTime @db.Date           // Date for aggregation
  
  // Usage metrics
  totalRequests        Int      @default(0)        // Total API requests
  successfulRequests   Int      @default(0)        // Successful API requests
  failedRequests       Int      @default(0)        // Failed API requests
  
  // Cost metrics
  totalCost            Float    @default(0.0)      // Total cost for the day
  averageCostPerRequest Float   @default(0.0)      // Average cost per request
  
  // Token usage
  totalInputTokens     Int      @default(0)
  totalOutputTokens    Int      @default(0)
  totalTokens          Int      @default(0)
  
  // Analysis metrics
  postsAnalyzed        Int      @default(0)        // Total posts analyzed
  opportunitiesFound   Int      @default(0)        // Total opportunities found
  averageCostPerPost   Float    @default(0.0)      // Average cost per post
  costPerOpportunity   Float    @default(0.0)      // Cost per opportunity found
  
  // Performance metrics
  averageResponseTime  Int?                        // Average response time in ms
  successRate          Float    @default(0.0)      // Success rate percentage
  
  // Model breakdown (JSON for flexibility)
  modelUsage           Json?                       // Usage breakdown by model
  
  // Metadata
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  
  @@unique([date])
  @@index([date])
  @@index([totalCost])
  @@index([postsAnalyzed])
  @@index([opportunitiesFound])
}

// Model-specific Usage Tracking
model AIModelUsage {
  id                   String   @id @default(cuid())
  
  // Model identification
  model                String                      // gemini-2.5-pro, gemini-2.5-flash, etc.
  date                 DateTime @db.Date           // Date for aggregation
  
  // Usage metrics
  requestCount         Int      @default(0)        // Number of requests
  successCount         Int      @default(0)        // Successful requests
  failureCount         Int      @default(0)        // Failed requests
  
  // Cost metrics
  totalCost            Float    @default(0.0)      // Total cost for this model
  averageCostPerRequest Float   @default(0.0)      // Average cost per request
  
  // Token usage
  totalInputTokens     Int      @default(0)
  totalOutputTokens    Int      @default(0)
  totalTokens          Int      @default(0)
  
  // Performance metrics
  averageResponseTime  Int?                        // Average response time in ms
  successRate          Float    @default(0.0)      // Success rate percentage
  
  // Operation breakdown
  individualRequests   Int      @default(0)        // Individual analysis requests
  batchRequests        Int      @default(0)        // Batch analysis requests
  fallbackRequests     Int      @default(0)        // Fallback requests
  
  // Metadata
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  
  @@unique([model, date])
  @@index([model])
  @@index([date])
  @@index([totalCost])
  @@index([successRate])
}

// Cost Alerts and Thresholds
model AICostAlert {
  id                   String   @id @default(cuid())
  
  // Alert configuration
  alertType            String                      // daily, weekly, monthly, threshold
  threshold            Float                       // Cost threshold
  period               String                      // daily, weekly, monthly
  
  // Alert details
  description          String   @db.Text
  isActive             Boolean  @default(true)
  
  // Notification settings
  emailNotification    Boolean  @default(true)
  slackNotification    Boolean  @default(false)
  
  // Alert history
  lastTriggered        DateTime?
  triggerCount         Int      @default(0)
  
  // Metadata
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  
  @@index([alertType])
  @@index([isActive])
  @@index([threshold])
}

// Cost Optimization Recommendations
model AICostOptimization {
  id                   String   @id @default(cuid())
  
  // Recommendation details
  type                 String                      // model-switch, batch-optimization, etc.
  title                String
  description          String   @db.Text
  
  // Potential savings
  potentialSavings     Float    @default(0.0)      // Estimated cost savings
  savingsPercentage    Float    @default(0.0)      // Percentage savings
  
  // Implementation details
  implementation       String   @db.Text           // How to implement
  priority             String   @default("medium") // high, medium, low
  
  // Status tracking
  status               String   @default("pending") // pending, implemented, dismissed
  implementedAt        DateTime?
  
  // Metadata
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  
  @@index([type])
  @@index([priority])
  @@index([status])
  @@index([potentialSavings])
}

// Add cost tracking relationship to existing models
// This would be added to the existing RedditPost model:
// costAnalyses         AIPostAnalysis[]

// This would be added to the existing Opportunity model:
// costAnalyses         AIPostAnalysis[]